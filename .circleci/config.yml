# Use the latest 2.1 version of CircleCI pipeline processing engine, see https://circleci.com/docs/2.0/configuration-reference/
version: 2.1
jobs:
  build:
    docker: # run the steps with Docker
      - image: circleci/openjdk:8-jdk-browsers 


      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/spring5-recipe-app

    
 
    steps: # a collection of executable commands

      - checkout # check out source code to working directory

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: spring5-recipe-app-{{ checksum "pom.xml" }}
      
      - run: mvn dependency:go-offline # gets the project dependencies
      
      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: spring5-recipe-app-{{ checksum "pom.xml" }}
      
      - run: mvn package # run the actual tests
      
      - store_test_results: 
      # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: target/surefire-reports
      
      - store_artifacts: # store the uberjar as an artifact
      # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: target/spring5-recipe-app-0.0.1-SNAPSHOT.jar
      